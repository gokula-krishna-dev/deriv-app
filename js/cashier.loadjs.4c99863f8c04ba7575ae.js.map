{"version":3,"sources":["webpack://@deriv/cashier//home/circleci/project/node_modules/loadjs/dist/loadjs.umd.js"],"names":["devnull","bundleIdCache","bundleResultCache","bundleCallbackQueue","publish","bundleId","pathsNotFound","q","length","splice","executeCallbacks","args","depsNotFound","call","success","error","loadFile","path","callbackFn","numTries","isLegacyIECss","e","doc","document","async","maxTries","numRetries","beforeCallbackFn","before","pathname","replace","pathStripped","test","createElement","rel","href","relList","as","src","undefined","onload","onerror","onbeforeload","ev","result","type","sheet","cssText","x","code","defaultPrevented","head","appendChild","loadjs","paths","arg1","arg2","trim","loadFn","resolve","reject","fn","i","numWaiting","push","loadFiles","returnPromise","Promise","ready","deps","bundleIds","r","subscribe","done","reset","isDefined"],"mappings":"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","file":"js/cashier.loadjs.4c99863f8c04ba7575ae.js","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.loadjs = factory();\n  }\n}(this, function() {\n/**\n * Global dependencies.\n * @global {Object} document - DOM\n */\n\nvar devnull = function() {},\n    bundleIdCache = {},\n    bundleResultCache = {},\n    bundleCallbackQueue = {};\n\n\n/**\n * Subscribe to bundle load event.\n * @param {string[]} bundleIds - Bundle ids\n * @param {Function} callbackFn - The callback function\n */\nfunction subscribe(bundleIds, callbackFn) {\n  // listify\n  bundleIds = bundleIds.push ? bundleIds : [bundleIds];\n\n  var depsNotFound = [],\n      i = bundleIds.length,\n      numWaiting = i,\n      fn,\n      bundleId,\n      r,\n      q;\n\n  // define callback function\n  fn = function (bundleId, pathsNotFound) {\n    if (pathsNotFound.length) depsNotFound.push(bundleId);\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(depsNotFound);\n  };\n\n  // register callback\n  while (i--) {\n    bundleId = bundleIds[i];\n\n    // execute callback if in result cache\n    r = bundleResultCache[bundleId];\n    if (r) {\n      fn(bundleId, r);\n      continue;\n    }\n\n    // add to callback queue\n    q = bundleCallbackQueue[bundleId] = bundleCallbackQueue[bundleId] || [];\n    q.push(fn);\n  }\n}\n\n\n/**\n * Publish bundle load event.\n * @param {string} bundleId - Bundle id\n * @param {string[]} pathsNotFound - List of files not found\n */\nfunction publish(bundleId, pathsNotFound) {\n  // exit if id isn't defined\n  if (!bundleId) return;\n\n  var q = bundleCallbackQueue[bundleId];\n\n  // cache result\n  bundleResultCache[bundleId] = pathsNotFound;\n\n  // exit if queue is empty\n  if (!q) return;\n\n  // empty callback queue\n  while (q.length) {\n    q[0](bundleId, pathsNotFound);\n    q.splice(0, 1);\n  }\n}\n\n\n/**\n * Execute callbacks.\n * @param {Object or Function} args - The callback args\n * @param {string[]} depsNotFound - List of dependencies not found\n */\nfunction executeCallbacks(args, depsNotFound) {\n  // accept function as argument\n  if (args.call) args = {success: args};\n\n  // success and error callbacks\n  if (depsNotFound.length) (args.error || devnull)(depsNotFound);\n  else (args.success || devnull)(args);\n}\n\n\n/**\n * Load individual file.\n * @param {string} path - The file path\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFile(path, callbackFn, args, numTries) {\n  var doc = document,\n      async = args.async,\n      maxTries = (args.numRetries || 0) + 1,\n      beforeCallbackFn = args.before || devnull,\n      pathname = path.replace(/[\\?|#].*$/, ''),\n      pathStripped = path.replace(/^(css|img)!/, ''),\n      isLegacyIECss,\n      e;\n\n  numTries = numTries || 0;\n\n  if (/(^css!|\\.css$)/.test(pathname)) {\n    // css\n    e = doc.createElement('link');\n    e.rel = 'stylesheet';\n    e.href = pathStripped;\n\n    // tag IE9+\n    isLegacyIECss = 'hideFocus' in e;\n\n    // use preload in IE Edge (to detect load errors)\n    if (isLegacyIECss && e.relList) {\n      isLegacyIECss = 0;\n      e.rel = 'preload';\n      e.as = 'style';\n    }\n  } else if (/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {\n    // image\n    e = doc.createElement('img');\n    e.src = pathStripped;    \n  } else {\n    // javascript\n    e = doc.createElement('script');\n    e.src = path;\n    e.async = async === undefined ? true : async;\n  }\n\n  e.onload = e.onerror = e.onbeforeload = function (ev) {\n    var result = ev.type[0];\n\n    // treat empty stylesheets as failures to get around lack of onerror\n    // support in IE9-11\n    if (isLegacyIECss) {\n      try {\n        if (!e.sheet.cssText.length) result = 'e';\n      } catch (x) {\n        // sheets objects created from load errors don't allow access to\n        // `cssText` (unless error is Code:18 SecurityError)\n        if (x.code != 18) result = 'e';\n      }\n    }\n\n    // handle retries in case of load failure\n    if (result == 'e') {\n      // increment counter\n      numTries += 1;\n\n      // exit function and try again\n      if (numTries < maxTries) {\n        return loadFile(path, callbackFn, args, numTries);\n      }\n    } else if (e.rel == 'preload' && e.as == 'style') {\n      // activate preloaded stylesheets\n      return e.rel = 'stylesheet'; // jshint ignore:line\n    }\n    \n    // execute callback\n    callbackFn(path, result, ev.defaultPrevented);\n  };\n\n  // add to document (unless callback returns `false`)\n  if (beforeCallbackFn(path, e) !== false) doc.head.appendChild(e);\n}\n\n\n/**\n * Load multiple files.\n * @param {string[]} paths - The file paths\n * @param {Function} callbackFn - The callback function\n */\nfunction loadFiles(paths, callbackFn, args) {\n  // listify paths\n  paths = paths.push ? paths : [paths];\n\n  var numWaiting = paths.length,\n      x = numWaiting,\n      pathsNotFound = [],\n      fn,\n      i;\n\n  // define callback function\n  fn = function(path, result, defaultPrevented) {\n    // handle error\n    if (result == 'e') pathsNotFound.push(path);\n\n    // handle beforeload event. If defaultPrevented then that means the load\n    // will be blocked (ex. Ghostery/ABP on Safari)\n    if (result == 'b') {\n      if (defaultPrevented) pathsNotFound.push(path);\n      else return;\n    }\n\n    numWaiting--;\n    if (!numWaiting) callbackFn(pathsNotFound);\n  };\n\n  // load scripts\n  for (i=0; i < x; i++) loadFile(paths[i], fn, args);\n}\n\n\n/**\n * Initiate script load and register bundle.\n * @param {(string|string[])} paths - The file paths\n * @param {(string|Function|Object)} [arg1] - The (1) bundleId or (2) success\n *   callback or (3) object literal with success/error arguments, numRetries,\n *   etc.\n * @param {(Function|Object)} [arg2] - The (1) success callback or (2) object\n *   literal with success/error arguments, numRetries, etc.\n */\nfunction loadjs(paths, arg1, arg2) {\n  var bundleId,\n      args;\n\n  // bundleId (if string)\n  if (arg1 && arg1.trim) bundleId = arg1;\n\n  // args (default is {})\n  args = (bundleId ? arg2 : arg1) || {};\n\n  // throw error if bundle is already defined\n  if (bundleId) {\n    if (bundleId in bundleIdCache) {\n      throw \"LoadJS\";\n    } else {\n      bundleIdCache[bundleId] = true;\n    }\n  }\n\n  function loadFn(resolve, reject) {\n    loadFiles(paths, function (pathsNotFound) {\n      // execute callbacks\n      executeCallbacks(args, pathsNotFound);\n      \n      // resolve Promise\n      if (resolve) {\n        executeCallbacks({success: resolve, error: reject}, pathsNotFound);\n      }\n\n      // publish bundle load event\n      publish(bundleId, pathsNotFound);\n    }, args);\n  }\n  \n  if (args.returnPromise) return new Promise(loadFn);\n  else loadFn();\n}\n\n\n/**\n * Execute callbacks when dependencies have been satisfied.\n * @param {(string|string[])} deps - List of bundle ids\n * @param {Object} args - success/error arguments\n */\nloadjs.ready = function ready(deps, args) {\n  // subscribe to bundle load event\n  subscribe(deps, function (depsNotFound) {\n    // execute callbacks\n    executeCallbacks(args, depsNotFound);\n  });\n\n  return loadjs;\n};\n\n\n/**\n * Manually satisfy bundle dependencies.\n * @param {string} bundleId - The bundle id\n */\nloadjs.done = function done(bundleId) {\n  publish(bundleId, []);\n};\n\n\n/**\n * Reset loadjs dependencies statuses\n */\nloadjs.reset = function reset() {\n  bundleIdCache = {};\n  bundleResultCache = {};\n  bundleCallbackQueue = {};\n};\n\n\n/**\n * Determine if bundle has already been defined\n * @param String} bundleId - The bundle id\n */\nloadjs.isDefined = function isDefined(bundleId) {\n  return bundleId in bundleIdCache;\n};\n\n\n// export\nreturn loadjs;\n\n}));\n"],"sourceRoot":""}
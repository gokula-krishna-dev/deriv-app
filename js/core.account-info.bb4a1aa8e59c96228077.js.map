{"version":3,"sources":["webpack:////home/circleci/project/packages/components/lib/money.js","webpack:////home/circleci/project/packages/components/lib/tabs.js","webpack:///./App/Containers/AccountSwitcher/account-switcher-account-list.jsx","webpack:///./App/Containers/AccountSwitcher/account-switcher-account-wrapper.jsx","webpack:///./App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./App/Containers/AccountSwitcher/account-switcher-mobile.jsx","webpack:///./App/Components/Layout/Header/account-info.jsx"],"names":["e","r","t","n","window","module","exports","o","i","l","call","m","c","d","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","default","prototype","hasOwnProperty","p","s","0","1","143","u","a","amount","className","currency","has_sign","should_format","f","Math","abs","formatMoney","createElement","Fragment","concat","toLowerCase","propTypes","oneOfType","number","string","bool","memo","2","26","87","102","126","iterator","constructor","TypeError","length","configurable","writable","key","setPrototypeOf","__proto__","ReferenceError","_","getPrototypeOf","y","Reflect","construct","sham","Proxy","Date","toString","this","arguments","apply","b","Array","onClick","props","count","label","header_content","setActiveLineStyle","active_tab_ref","id","is_active","is_label_hidden","top","bottom","header_fit_content","ref","Component","func","v","h","x","O","S","w","g","onTabItemClick","setState","active_index","tabs_wrapper_ref","getBoundingClientRect","active_line_style","left","width","setActiveTabRef","setTabsWrapperRef","state","children","center","fit_content","single_tab_has_no_label","toFixed","style","Children","map","arrayOf","node","j","31","36","AccountDisplay","is_virtual","loginid","onClickAccount","selected_loginid","is_disabled","classNames","account_type","has_balance","CurrencyUtils","CurrencyDisplay","toggleVisibility","is_visible","AccountWrapper","PropTypes","handleLogout","routeBackInApp","redirectToMt5","toggleAccountsDialog","openMt5RealAccount","is_logged_in","is_mt5_allowed","onListEnter","openMt5DemoAccount","redirectToMt5Demo","setAccountCurrency","toggleSetCurrencyModal","legacy","isDemo","test","account","getRemainingAccounts","icon","title","account_types","type","localize","existing_mt5_groups","forEach","mt5_config","active_tab_index","is_real_deriv_visible","is_real_dmt5_visible","has_autohide","document","account_loginid","total_assets_message_demo","total_assets_message_real","total_assets_message","is_demo_deriv_visible","accounts","is_demo_dmt5_visible","is_loading_mt5","demo_mt5","balance","currency_icon","getMT5AccountDisplay","display_login","remaining_demo_mt5","real_accounts","sorted_account_list","has_set_currency","can_open_multi","real_mt5","group","remaining_real_mt5","has_any_real_account","setWrapperRef","demo_accounts","is_real_account_tab","account_list","sort","a_is_crypto","b_is_crypto","isCryptocurrency","a_is_fiat","a_currency","existing_real_mt5_groups","keys","mt5_demo_total","mt5_login_list","filter","total","isArray","AccountSwitcher","available_crypto_currencies","array","can_change_fiat_currency","can_upgrade_to","is_pending_authentication","is_positions_drawer_on","logoutClient","obj_total_balance","switchAccount","togglePositionsDrawer","updateMt5LoginList","client","is_populating_mt5_account_list","openRealAccountSignup","ui","enableApp","disableApp","is_upgrade_enabled","AccountSwitcherMobile","onClose","is_dialog_on","toggleDialog","acc_switcher_disabled_message","undefined","enter","enterDone","exit","AccountInfo"],"mappings":"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","file":"js/core.account-info.bb4a1aa8e59c96228077.js","sourcesContent":["!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"prop-types\"),require(\"react\"),require(\"classnames\"),require(\"@deriv/shared/utils/currency\")):\"function\"==typeof define&&define.amd?define([\"prop-types\",\"react\",\"classnames\",\"@deriv/shared/utils/currency\"],r):\"object\"==typeof exports?exports[\"@deriv/component\"]=r(require(\"prop-types\"),require(\"react\"),require(\"classnames\"),require(\"@deriv/shared/utils/currency\")):e[\"@deriv/component\"]=r(e[\"prop-types\"],e.react,e.classnames,e[\"@deriv/shared/utils/currency\"])}(window,(function(e,r,t,n){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\"\",t(t.s=143)}({0:function(r,t){r.exports=e},1:function(e,t){e.exports=r},143:function(e,r,t){\"use strict\";t.r(r);var n=t(2),o=t.n(n),u=t(0),a=t.n(u),s=t(1),i=t(26),c=t.n(i),l=function(e){var r=e.amount,t=e.className,n=e.currency,u=void 0===n?\"USD\":n,a=e.has_sign,i=e.should_format,l=void 0===i||i,f=\"\";+r&&(r<0||a)&&(f=r>0?\"+\":\"-\");var p=a||l?Math.abs(r):r,d=l?c.a.formatMoney(u,p,!0):p;return s.createElement(s.Fragment,null,a&&f,s.createElement(\"span\",{className:o()(t,\"symbols\",\"symbols--\".concat(u.toLowerCase()))}),d)};l.propTypes={amount:a.a.oneOfType([a.a.number,a.a.string]),className:a.a.string,currency:a.a.string,has_sign:a.a.bool,should_format:a.a.bool};var f=s.memo(l);t(87),r.default=f},2:function(e,r){e.exports=t},26:function(e,r){e.exports=n},87:function(e,r,t){}}).default}));\n//# sourceMappingURL=money.js.map","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e(require(\"prop-types\"),require(\"react\"),require(\"classnames\")):\"function\"==typeof define&&define.amd?define([\"prop-types\",\"react\",\"classnames\"],e):\"object\"==typeof exports?exports[\"@deriv/component\"]=e(require(\"prop-types\"),require(\"react\"),require(\"classnames\")):t[\"@deriv/component\"]=e(t[\"prop-types\"],t.react,t.classnames)}(window,(function(t,e,n){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=126)}({0:function(e,n){e.exports=t},1:function(t,n){t.exports=e},102:function(t,e,n){},126:function(t,e,n){\"use strict\";n.r(e);var r=n(2),o=n.n(r),i=n(1),c=n(0),a=n.n(c),s=n(31);function u(t){return(u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function l(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function p(t,e){return(p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function b(t){var e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=_(t);if(e){var o=_(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return d(this,n)}}function d(t,e){return!e||\"object\"!==u(e)&&\"function\"!=typeof e?function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t):e}function _(t){return(_=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var y=function(t){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&p(t,e)}(a,t);var e,n,r,c=b(a);function a(){var t;l(this,a);for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return(t=c.call.apply(c,[this].concat(n))).onClick=function(){(0,t.props.onClick)()},t}return e=a,(n=[{key:\"componentDidUpdate\",value:function(t){t.count===this.props.count&&t.label===this.props.label&&t.header_content===this.props.header_content||this.props.setActiveLineStyle()}},{key:\"render\",value:function(){var t=this.props,e=t.active_tab_ref,n=t.count,r=t.id,c=t.header_content,a=t.is_active,u=t.is_label_hidden,l=t.label,f=t.top,p=t.bottom,b=t.header_fit_content,d=o()(\"dc-tabs__item\",{\"dc-tabs__active\":a,\"dc-tabs__item--top\":f,\"dc-tabs__item--bottom\":p,\"dc-tabs__item--header-fit-content\":b,\"dc-tabs__item--is-hidden\":u});return i.createElement(\"li\",{id:r,className:d,onClick:this.onClick,ref:e},c||l,!!n&&i.createElement(s.default,{className:\"dc-tabs__item__counter\",count:n}))}}])&&f(e.prototype,n),r&&f(e,r),a}(i.Component);y.propTypes={className:a.a.string,count:a.a.number,is_active:a.a.bool,is_label_hidden:a.a.bool,label:a.a.string,onClick:a.a.func};var v=y;function h(t){return(h=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t})(t)}function m(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function x(t,e){return(x=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function g(t){var e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=S(t);if(e){var o=S(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return O(this,n)}}function O(t,e){return!e||\"object\"!==h(e)&&\"function\"!=typeof e?function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t):e}function S(t){return(S=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var w=function(t){!function(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&x(t,e)}(a,t);var e,n,r,c=g(a);function a(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}(this,a),(e=c.call(this,t)).onTabItemClick=function(t){e.setState({active_index:t})},e.setActiveLineStyle=function(){if(e.props.header_fit_content&&e.active_tab_ref&&e.tabs_wrapper_ref){var t=e.tabs_wrapper_ref.getBoundingClientRect(),n=e.active_tab_ref.getBoundingClientRect();e.setState({active_line_style:{left:n.left-t.left,width:n.width}})}},e.setActiveTabRef=function(t){e.active_tab_ref=t,e.setActiveLineStyle()},e.setTabsWrapperRef=function(t){e.tabs_wrapper_ref=t,e.setActiveLineStyle()},e.state={active_index:t.active_index||0},e}return e=a,(n=[{key:\"componentDidUpdate\",value:function(t,e){-1!==this.props.active_index&&e.active_index!==this.state.active_index&&(this.setState({active_index:this.state.active_index||0}),\"function\"==typeof this.props.onTabItemClick&&this.props.onTabItemClick(this.state.active_index)),this.props.active_index!==t.active_index&&this.setState({active_index:this.props.active_index})}},{key:\"render\",value:function(){var t,e,n,r=this,c=this.props,a=c.children,s=c.className,u=c.top,l=c.bottom,f=c.center,p=c.fit_content,b=c.header_fit_content,d=c.single_tab_has_no_label,_=this.state.active_index,y=p?\"150px\":\"\".concat((100/a.length).toFixed(2),\"%\");return i.createElement(\"div\",{className:o()(\"dc-tabs\",(t={},e=\"dc-tabs dc-tabs--\".concat(s),n=s,e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t)),style:{\"--tab-width\":\"\".concat(y)}},i.createElement(\"ul\",{className:o()(\"dc-tabs__list\",{\"dc-tabs__list--top\":u,\"dc-tabs__list--bottom\":l,\"dc-tabs__list--center\":f,\"dc-tabs__list--header-fit-content\":b}),ref:this.setTabsWrapperRef},i.Children.map(a,(function(t,e){var n=t.props,o=n.count,c=n.header_content,s=n.label;return i.createElement(v,{count:o,is_active:e===_,key:s,is_label_hidden:1===a.length&&d,label:s,top:u,bottom:l,header_fit_content:b,active_tab_ref:e===_?r.setActiveTabRef:null,header_content:c,onClick:function(){return r.onTabItemClick(e)},setActiveLineStyle:r.setActiveLineStyle})})),i.createElement(\"span\",{className:o()(\"dc-tabs__active-line\",{\"dc-tabs__active-line--top\":u,\"dc-tabs__active-line--bottom\":l,\"dc-tabs__active-line--fit-content\":p,\"dc-tabs__active-line--header-fit-content\":b,\"dc-tabs__active-line--is-hidden\":1===a.length&&d}),style:this.state.active_line_style})),i.createElement(\"div\",{className:\"dc-tabs__content\"},i.Children.map(a,(function(t,e){if(e===_)return t.props.children}))))}}])&&m(e.prototype,n),r&&m(e,r),a}(i.Component);w.propTypes={children:a.a.oneOfType([a.a.arrayOf(a.a.node),a.a.node])};var j=w;n(102),e.default=j},2:function(t,e){t.exports=n},31:function(t,e,n){\"use strict\";n.r(e);var r=n(2),o=n.n(r),i=n(0),c=n.n(i),a=n(1),s=function(t){var e=t.className,n=t.count;return a.createElement(\"div\",{className:o()(\"dc-counter\",e)},n)};s.propTypes={className:c.a.string,count:c.a.number};var u=s;n(36),e.default=u},36:function(t,e,n){}}).default}));\n//# sourceMappingURL=tabs.js.map","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Money } from '@deriv/components';\nimport CurrencyUtils from '@deriv/shared/utils/currency';\nimport { Localize } from '@deriv/translations';\nimport { getMT5AccountDisplay } from 'Stores/Helpers/client';\n\nconst AccountList = ({\n    account_type,\n    balance,\n    currency,\n    currency_icon,\n    display_type,\n    has_balance,\n    is_disabled,\n    is_virtual,\n    loginid,\n    onClickAccount,\n    selected_loginid,\n}) => {\n    if (is_disabled && !currency) return null;\n    return (\n        <>\n            <div\n                id={`dt_${loginid}`}\n                className={classNames('acc-switcher__account', {\n                    'acc-switcher__account--selected': loginid === selected_loginid,\n                    'acc-switcher__account--disabled': is_disabled,\n                })}\n                onClick={is_disabled ? undefined : onClickAccount}\n            >\n                <span className={'acc-switcher__id'}>\n                    <Icon\n                        icon={currency ? currency_icon : 'IcCurrencyUnknown'}\n                        className={'acc-switcher__id-icon'}\n                        size={24}\n                    />\n                    <span>\n                        {display_type === 'currency' ? (\n                            <CurrencyDisplay is_virtual={is_virtual} currency={currency} />\n                        ) : (\n                            <AccountDisplay account_type={account_type} />\n                        )}\n                        <div className='acc-switcher__loginid-text'>{loginid}</div>\n                    </span>\n                    {has_balance && (\n                        <span className='acc-switcher__balance'>\n                            {currency && (\n                                <Money\n                                    currency={currency}\n                                    amount={CurrencyUtils.formatMoney(currency, balance, true)}\n                                    should_format={false}\n                                />\n                            )}\n                        </span>\n                    )}\n                </span>\n            </div>\n        </>\n    );\n};\n\nconst CurrencyDisplay = ({ currency, is_virtual }) => {\n    if (is_virtual) {\n        return <Localize i18n_default_text='Demo' />;\n    }\n    if (!currency) {\n        return <Localize i18n_default_text='No currency assigned' />;\n    }\n    return CurrencyUtils.getCurrencyDisplayCode(currency);\n};\n\nconst AccountDisplay = ({ account_type }) => <div>{getMT5AccountDisplay(account_type)}</div>;\n\nexport default AccountList;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@deriv/components';\n\nconst AccountWrapper = ({ children, header, is_visible, toggleVisibility }) => (\n    <React.Fragment>\n        <div className={classNames('acc-switcher', { 'acc-info--show': !is_visible })} onClick={toggleVisibility}>\n            <span className='acc-switcher__list-title'>{header}</span>\n            <Icon icon='IcChevronDown' className='acc-info__select-arrow acc-info__select-arrow--invert' />\n        </div>\n        {is_visible && <React.Fragment>{children}</React.Fragment>}\n    </React.Fragment>\n);\n\nAccountWrapper.propTypes = {\n    children: PropTypes.node,\n    header: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    is_visible: PropTypes.bool,\n    toggleVisibility: PropTypes.func,\n};\n\nexport default AccountWrapper;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport {\n    Button,\n    DesktopWrapper,\n    MobileWrapper,\n    Div100vhContainer,\n    Icon,\n    Money,\n    Tabs,\n    ThemedScrollbars,\n} from '@deriv/components';\nimport { urlFor } from '@deriv/shared/utils/url';\nimport routes from '@deriv/shared/utils/routes';\nimport CurrencyUtils from '@deriv/shared/utils/currency';\nimport { localize, Localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport { getMT5AccountDisplay } from 'Stores/Helpers/client';\nimport { AccountsItemLoader } from 'App/Components/Layout/Header/Components/Preloader';\nimport AccountList from './account-switcher-account-list.jsx';\nimport AccountWrapper from './account-switcher-account-wrapper.jsx';\n\nclass AccountSwitcher extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            active_tab_index: props.is_virtual ? 1 : 0,\n            is_demo_deriv_visible: true,\n            is_demo_dmt5_visible: true,\n            is_real_deriv_visible: true,\n            is_real_dmt5_visible: true,\n            has_autohide: true,\n        };\n    }\n\n    toggleVisibility = section => {\n        this.setState({ [`is_${section}_visible`]: !this.state[`is_${section}_visible`] });\n    };\n\n    setWrapperRef = node => {\n        this.wrapper_ref = node;\n    };\n\n    updateAccountTabIndex = index => {\n        this.setState({ active_tab_index: index });\n    };\n\n    handleClickOutside = event => {\n        const accounts_toggle_btn = !event.target.classList.contains('acc-info');\n        if (\n            this.wrapper_ref &&\n            !this.wrapper_ref.contains(event.target) &&\n            this.props.is_visible &&\n            accounts_toggle_btn\n        ) {\n            this.props.toggleAccountsDialog();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggleAccountsDialog();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        this.props.logoutClient().then(() => {\n            this.props.routeBackInApp(this.props.history);\n        });\n    };\n\n    redirectToMt5 = account_type => {\n        this.props.toggleAccountsDialog();\n        this.props.history.push(`${routes.mt5}#${account_type}`);\n    };\n\n    openMt5RealAccount = account_type => {\n        sessionStorage.setItem('open_mt5_account_type', `real.${account_type}`);\n        this.redirectToMt5Real();\n    };\n\n    redirectToMt5Real = () => {\n        if (!this.props.is_logged_in || this.props.is_mt5_allowed) {\n            this.redirectToMt5('real');\n        } else {\n            window.open(urlFor('user/metatrader', { legacy: true }));\n        }\n    };\n\n    onListEnter = () => this.setState({ has_autohide: false });\n\n    onListLeave = () => this.setState({ has_autohide: true });\n\n    openMt5DemoAccount = account_type => {\n        sessionStorage.setItem('open_mt5_account_type', `demo.${account_type}`);\n        this.redirectToMt5Demo();\n    };\n\n    redirectToMt5Demo = () => {\n        this.redirectToMt5('demo');\n    };\n\n    setAccountCurrency = () => {\n        this.props.toggleAccountsDialog();\n        this.props.toggleSetCurrencyModal();\n    };\n\n    onClickUpgrade = () => {\n        if (this.props.can_upgrade_to === 'svg') {\n            this.props.openRealAccountSignup();\n        } else {\n            window.open(urlFor('new_account/maltainvestws', { legacy: true }));\n        }\n    };\n\n    isDemo = account => /^demo/.test(account.group);\n\n    isReal = account => !this.isDemo(account);\n\n    getRemainingAccounts = existing_mt5_groups => {\n        const mt5_config = [\n            {\n                account_types: ['svg'],\n                icon: 'Synthetic',\n                title: localize('Synthetic'),\n                type: 'synthetic',\n            },\n            {\n                account_types: ['vanuatu', 'svg_standard'],\n                icon: 'Financial',\n                title: localize('Financial'),\n                type: 'financial',\n            },\n            {\n                account_types: ['labuan'],\n                icon: 'Financial STP',\n                title: localize('Financial STP'),\n                type: 'financial_stp',\n            },\n        ];\n\n        existing_mt5_groups.forEach(group => {\n            const type = group.split(/[demo|real]_/)[1];\n            const index_to_remove = mt5_config.findIndex(account => account.account_types.indexOf(type) > -1);\n            mt5_config.splice(index_to_remove, 1);\n        });\n\n        return mt5_config;\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n        this.props.updateMt5LoginList();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggleAccountsDialog();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    get is_real_account_tab() {\n        // Real accounts is always the first tab index based on design\n        return this.state.active_tab_index === 0;\n    }\n\n    get sorted_account_list() {\n        // sort accounts as follows:\n        // top is fiat, then crypto (each alphabetically by currency), then demo\n        return this.props.account_list.slice().sort((a, b) => {\n            const a_currency = this.props.accounts[a.loginid].currency;\n            const b_currency = this.props.accounts[b.loginid].currency;\n            const a_is_crypto = CurrencyUtils.isCryptocurrency(a_currency);\n            const b_is_crypto = CurrencyUtils.isCryptocurrency(b_currency);\n            const a_is_fiat = !a_is_crypto;\n            const b_is_fiat = !b_is_crypto;\n            if (a.is_virtual || b.is_virtual) {\n                return a.is_virtual ? 1 : -1;\n            } else if ((a_is_crypto && b_is_crypto) || (a_is_fiat && b_is_fiat)) {\n                return a_currency < b_currency ? -1 : 1;\n            } else if (a_is_fiat && b_is_crypto) {\n                return -1;\n            }\n            return 1;\n        });\n    }\n\n    get sorted_mt5_list() {\n        // for MT5, synthetic, financial, financial stp\n        return this.props.mt5_login_list.slice().sort((a, b) => {\n            if (/demo/.test(a.group) && !/demo/.test(b.group)) {\n                return 1;\n            }\n            if (/demo/.test(b.group) && !/demo/.test(a.group)) {\n                return -1;\n            }\n            if (/svg$/.test(a.group)) {\n                return -1;\n            }\n            if (/vanuatu|svg_standard/.test(a.group)) {\n                return /svg$/.test(b.group) ? 1 : -1;\n            }\n            return 1;\n        });\n    }\n\n    get demo_mt5() {\n        return this.sorted_mt5_list.filter(this.isDemo);\n    }\n\n    get remaining_demo_mt5() {\n        const existing_demo_mt5_groups = Object.keys(this.demo_mt5).map(account => this.demo_mt5[account].group);\n        return this.getRemainingAccounts(existing_demo_mt5_groups);\n    }\n\n    get real_mt5() {\n        return this.sorted_mt5_list.filter(this.isReal);\n    }\n\n    get remaining_real_mt5() {\n        const existing_real_mt5_groups = Object.keys(this.real_mt5).map(account => this.real_mt5[account].group);\n        return this.getRemainingAccounts(existing_real_mt5_groups);\n    }\n\n    get has_set_currency() {\n        return this.props.account_list.filter(account => !account.is_virtual).some(account => account.title !== 'Real');\n    }\n\n    get can_upgrade() {\n        return !!(this.props.is_virtual && this.props.can_upgrade_to);\n    }\n\n    get can_open_multi() {\n        return !!(!this.props.is_virtual && this.props.available_crypto_currencies.length > 0);\n    }\n\n    get total_demo_assets() {\n        const vrtc_loginid = this.props.account_list.find(account => account.is_virtual).loginid;\n        const vrtc_balance = this.props.accounts[vrtc_loginid] ? this.props.accounts[vrtc_loginid].balance : 0;\n        const mt5_demo_total = this.props.mt5_login_list\n            .filter(account => /^demo/.test(account.group))\n            .reduce(\n                (total, account) => {\n                    total.balance += account.balance;\n                    return total;\n                },\n                { balance: 0 }\n            );\n        return Array.isArray(this.props.mt5_login_list) ? mt5_demo_total.balance + vrtc_balance : vrtc_balance;\n    }\n\n    get total_real_assets() {\n        return this.props.obj_total_balance.amount_real + this.props.obj_total_balance.amount_mt5;\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n\n        const total_assets_message_demo = this.props.is_mt5_allowed\n            ? localize('Total assets in your Deriv and DMT5 demo accounts.')\n            : localize('Total assets in your Deriv demo accounts.');\n\n        const total_assets_message_real = this.props.is_mt5_allowed\n            ? localize('Total assets in your Deriv and DMT5 real accounts.')\n            : localize('Total assets in your Deriv real accounts.');\n\n        const total_assets_message = this.is_real_account_tab ? total_assets_message_real : total_assets_message_demo;\n\n        const demo_accounts = (\n            <div className='acc-switcher__list-wrapper'>\n                <AccountWrapper\n                    header={<Localize i18n_default_text='Deriv Accounts' />}\n                    is_visible={this.state.is_demo_deriv_visible}\n                    toggleVisibility={() => {\n                        this.toggleVisibility('demo_deriv');\n                    }}\n                >\n                    <div className='acc-switcher__accounts'>\n                        {this.sorted_account_list\n                            .filter(account => account.is_virtual)\n                            .map(account => (\n                                <AccountList\n                                    key={account.loginid}\n                                    balance={this.props.accounts[account.loginid].balance}\n                                    currency={this.props.accounts[account.loginid].currency}\n                                    currency_icon={`IcCurrency-${account.icon}`}\n                                    display_type={'currency'}\n                                    has_balance={'balance' in this.props.accounts[account.loginid]}\n                                    is_disabled={account.is_disabled}\n                                    is_virtual={account.is_virtual}\n                                    loginid={account.loginid}\n                                    onClickAccount={\n                                        account.is_disabled ? undefined : this.doSwitch.bind(this, account.loginid)\n                                    }\n                                    selected_loginid={this.props.account_loginid}\n                                />\n                            ))}\n                    </div>\n                </AccountWrapper>\n                {this.props.is_mt5_allowed && (\n                    <React.Fragment>\n                        <div className='acc-switcher__separator acc-switcher__separator--no-padding' />\n                        <AccountWrapper\n                            header={<Localize i18n_default_text='DMT5 Accounts' />}\n                            is_visible={this.state.is_demo_dmt5_visible}\n                            toggleVisibility={() => {\n                                this.toggleVisibility('demo_dmt5');\n                            }}\n                        >\n                            {this.props.is_loading_mt5 ? (\n                                <div className='acc-switcher__accounts--is-loading'>\n                                    <AccountsItemLoader speed={3} />\n                                </div>\n                            ) : (\n                                <React.Fragment>\n                                    {!!this.demo_mt5.length && (\n                                        <div className='acc-switcher__accounts'>\n                                            {this.demo_mt5.map(account => (\n                                                <AccountList\n                                                    key={account.login}\n                                                    account_type={account.group}\n                                                    balance={account.balance}\n                                                    currency={account.currency}\n                                                    currency_icon={`IcMt5-${getMT5AccountDisplay(account.group)}`}\n                                                    has_balance={'balance' in account}\n                                                    is_virtual\n                                                    loginid={account.display_login}\n                                                    onClickAccount={this.redirectToMt5Demo}\n                                                />\n                                            ))}\n                                        </div>\n                                    )}\n                                    {this.remaining_demo_mt5.map(account => (\n                                        <div key={account.title} className='acc-switcher__new-account'>\n                                            <Icon icon={`IcMt5-${account.icon}`} size={24} />\n                                            <span className='acc-switcher__new-account-text'>{account.title}</span>\n                                            <Button\n                                                onClick={() => this.openMt5DemoAccount(account.type)}\n                                                className='acc-switcher__new-account-btn'\n                                                secondary\n                                                small\n                                            >\n                                                {localize('Add')}\n                                            </Button>\n                                        </div>\n                                    ))}\n                                </React.Fragment>\n                            )}\n                        </AccountWrapper>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n\n        const real_accounts = (\n            <div className='acc-switcher__list-wrapper' onMouseEnter={this.onListEnter} onMouseLeave={this.onListLeave}>\n                <React.Fragment>\n                    <AccountWrapper\n                        header={<Localize i18n_default_text='Deriv Accounts' />}\n                        is_visible={this.state.is_real_deriv_visible}\n                        toggleVisibility={() => {\n                            this.toggleVisibility('real_deriv');\n                        }}\n                    >\n                        <div className='acc-switcher__accounts'>\n                            {this.sorted_account_list\n                                .filter(account => !account.is_virtual)\n                                .map(account => (\n                                    <AccountList\n                                        key={account.loginid}\n                                        balance={this.props.accounts[account.loginid].balance}\n                                        currency={this.props.accounts[account.loginid].currency}\n                                        currency_icon={`IcCurrency-${account.icon}`}\n                                        display_type={'currency'}\n                                        has_balance={'balance' in this.props.accounts[account.loginid]}\n                                        is_disabled={account.is_disabled}\n                                        is_virtual={account.is_virtual}\n                                        loginid={account.loginid}\n                                        onClickAccount={\n                                            account.is_disabled ? undefined : this.doSwitch.bind(this, account.loginid)\n                                        }\n                                        selected_loginid={this.props.account_loginid}\n                                    />\n                                ))}\n                        </div>\n                        {this.can_upgrade && (\n                            <div className='acc-switcher__new-account'>\n                                <Icon icon='IcDeriv' size={24} />\n                                <span className='acc-switcher__new-account-text'>{localize('Deriv account')}</span>\n                                <Button\n                                    onClick={this.onClickUpgrade}\n                                    className='acc-switcher__new-account-btn'\n                                    secondary\n                                    small\n                                >\n                                    {localize('Add')}\n                                </Button>\n                            </div>\n                        )}\n                        {!this.can_upgrade &&\n                            (this.can_open_multi || this.props.can_change_fiat_currency || !this.has_set_currency) && (\n                                <Button\n                                    className='acc-switcher__btn'\n                                    secondary\n                                    onClick={\n                                        this.has_set_currency\n                                            ? this.props.openRealAccountSignup\n                                            : this.setAccountCurrency\n                                    }\n                                >\n                                    {this.can_open_multi\n                                        ? localize('Add or manage account')\n                                        : localize('Manage account')}\n                                </Button>\n                            )}\n                    </AccountWrapper>\n                </React.Fragment>\n                {this.props.is_mt5_allowed && (\n                    <React.Fragment>\n                        <div className='acc-switcher__separator acc-switcher__separator--no-padding' />\n                        <AccountWrapper\n                            header={<Localize i18n_default_text='DMT5 Accounts' />}\n                            is_visible={this.state.is_real_dmt5_visible}\n                            toggleVisibility={() => {\n                                this.toggleVisibility('real_dmt5');\n                            }}\n                        >\n                            {this.props.is_loading_mt5 ? (\n                                <div className='acc-switcher__accounts--is-loading'>\n                                    <AccountsItemLoader speed={3} />\n                                </div>\n                            ) : (\n                                <React.Fragment>\n                                    {!!this.real_mt5.length && (\n                                        <div className='acc-switcher__accounts'>\n                                            {this.real_mt5.map(account => (\n                                                <AccountList\n                                                    key={account.login}\n                                                    account_type={account.group}\n                                                    balance={account.balance}\n                                                    currency={account.currency}\n                                                    currency_icon={`IcMt5-${getMT5AccountDisplay(account.group)}`}\n                                                    has_balance={'balance' in account}\n                                                    loginid={account.display_login}\n                                                    onClickAccount={this.redirectToMt5Real}\n                                                />\n                                            ))}\n                                        </div>\n                                    )}\n                                    {this.remaining_real_mt5.map(account => (\n                                        <div key={account.title} className='acc-switcher__new-account'>\n                                            <Icon icon={`IcMt5-${account.icon}`} size={24} />\n                                            <span className='acc-switcher__new-account-text'>{account.title}</span>\n                                            <Button\n                                                onClick={() => this.openMt5RealAccount(account.type)}\n                                                className='acc-switcher__new-account-btn'\n                                                secondary\n                                                small\n                                                is_disabled={\n                                                    !this.props.has_any_real_account ||\n                                                    (account.type === 'financial_stp' &&\n                                                        this.props.is_pending_authentication)\n                                                }\n                                            >\n                                                {localize('Add')}\n                                            </Button>\n                                        </div>\n                                    ))}\n                                </React.Fragment>\n                            )}\n                        </AccountWrapper>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef}>\n                <Tabs\n                    active_index={this.state.active_tab_index}\n                    className='acc-switcher__list-tabs'\n                    onTabItemClick={this.updateAccountTabIndex}\n                    top\n                >\n                    {/* TODO: De-couple and refactor demo and real accounts groups\n                        into a single reusable AccountListItem component */}\n                    <div label={localize('Real')}>\n                        <DesktopWrapper>\n                            <ThemedScrollbars height='354px'>{real_accounts}</ThemedScrollbars>\n                        </DesktopWrapper>\n                        <MobileWrapper>\n                            <Div100vhContainer className='acc-switcher__list-container' max_autoheight_offset='204px'>\n                                {real_accounts}\n                            </Div100vhContainer>\n                        </MobileWrapper>\n                    </div>\n                    <div label={localize('Demo')}>\n                        <DesktopWrapper>\n                            <ThemedScrollbars height='354px'>{demo_accounts}</ThemedScrollbars>\n                        </DesktopWrapper>\n                        <MobileWrapper>\n                            <Div100vhContainer className='acc-switcher__list-container' max_autoheight_offset='204px'>\n                                {demo_accounts}\n                            </Div100vhContainer>\n                        </MobileWrapper>\n                    </div>\n                </Tabs>\n                <div\n                    className={classNames('acc-switcher__separator', {\n                        'acc-switcher__separator--auto-margin': this.props.is_mobile,\n                    })}\n                />\n                <div className='acc-switcher__total'>\n                    <span>\n                        <Localize i18n_default_text='Total assets' />\n                    </span>\n                    <span className='acc-switcher__balance'>\n                        <Money\n                            currency={this.is_real_account_tab ? this.props.obj_total_balance.currency : 'USD'}\n                            amount={CurrencyUtils.formatMoney(\n                                this.is_real_account_tab ? this.props.obj_total_balance.currency : 'USD',\n                                this.is_real_account_tab ? this.total_real_assets : this.total_demo_assets,\n                                true\n                            )}\n                            should_format={false}\n                        />\n                    </span>\n                </div>\n                <div className='acc-switcher__total-subtitle'>\n                    <span>{total_assets_message}</span>\n                </div>\n                <div className='acc-switcher__separator' />\n                <div id='dt_logout_button' className='acc-switcher__logout'>\n                    <span className='acc-switcher__logout-text' onClick={this.handleLogout}>\n                        {localize('Log out')}\n                    </span>\n                    <Icon\n                        icon='IcLogout'\n                        className='acc-switcher__logout-icon drawer__icon'\n                        onClick={this.handleLogout}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    available_crypto_currencies: PropTypes.array,\n    account_list: PropTypes.array,\n    account_loginid: PropTypes.string,\n    accounts: PropTypes.object,\n    can_change_fiat_currency: PropTypes.bool,\n    can_upgrade_to: PropTypes.string,\n    has_any_real_account: PropTypes.bool,\n    is_loading_mt5: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_mt5_allowed: PropTypes.bool,\n    is_pending_authentication: PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    is_visible: PropTypes.bool,\n    logoutClient: PropTypes.func,\n    mt5_login_list: PropTypes.array,\n    obj_total_balance: PropTypes.object,\n    openRealAccountSignup: PropTypes.func,\n    switchAccount: PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    togglePositionsDrawer: PropTypes.func,\n    toggleSetCurrencyModal: PropTypes.func,\n    updateMt5LoginList: PropTypes.func,\n};\n\nconst account_switcher = withRouter(\n    connect(({ client, common, ui }) => ({\n        available_crypto_currencies: client.available_crypto_currencies,\n        account_loginid: client.loginid,\n        accounts: client.accounts,\n        can_change_fiat_currency: client.can_change_fiat_currency,\n        account_list: client.account_list,\n        can_upgrade_to: client.can_upgrade_to,\n        is_loading_mt5: client.is_populating_mt5_account_list,\n        is_logged_in: client.is_logged_in,\n        is_mt5_allowed: client.is_mt5_allowed,\n        is_pending_authentication: client.is_pending_authentication,\n        is_virtual: client.is_virtual,\n        has_any_real_account: client.has_any_real_account,\n        mt5_login_list: client.mt5_login_list,\n        obj_total_balance: client.obj_total_balance,\n        switchAccount: client.switchAccount,\n        logoutClient: client.logout,\n        updateMt5LoginList: client.updateMt5LoginList,\n        routeBackInApp: common.routeBackInApp,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        openRealAccountSignup: ui.openRealAccountSignup,\n        toggleAccountsDialog: ui.toggleAccountsDialog,\n        togglePositionsDrawer: ui.togglePositionsDrawer,\n        toggleSetCurrencyModal: ui.toggleSetCurrencyModal,\n    }))(AccountSwitcher)\n);\n\nexport { account_switcher as AccountSwitcher };\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Div100vhContainer, Modal } from '@deriv/components';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\n\nconst AccountSwitcherMobile = props => {\n    const { disableApp, enableApp, is_visible, is_upgrade_enabled, toggle } = props;\n    return (\n        <Modal\n            id='dt_account_switcher_modal'\n            className='accounts-switcher'\n            enableApp={enableApp}\n            is_open={is_visible}\n            is_vertical_top\n            disableApp={disableApp}\n            has_close_icon={false}\n            toggleModal={toggle}\n            height='auto'\n            width='calc(100vw - 32px)'\n        >\n            <Div100vhContainer\n                className={classNames('acc-switcher__wrapper', 'acc-switcher__wrapper--is-mobile')}\n                max_autoheight_offset='48px'\n            >\n                <AccountSwitcher is_mobile is_visible={true} toggle={toggle} is_upgrade_enabled={is_upgrade_enabled} />\n            </Div100vhContainer>\n        </Modal>\n    );\n};\n\nAccountSwitcherMobile.propTypes = {\n    children: PropTypes.any,\n    onClose: PropTypes.func,\n    title: PropTypes.string,\n    visible: PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default AccountSwitcherMobile;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { DesktopWrapper, Icon, MobileWrapper, Popover } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport AccountSwitcherMobile from 'App/Containers/AccountSwitcher/account-switcher-mobile.jsx';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\n\nconst AccountInfoWrapper = ({ is_disabled, disabled_message, children }) =>\n    is_disabled && disabled_message ? (\n        <Popover alignment='bottom' message={disabled_message} zIndex={99999}>\n            {children}\n        </Popover>\n    ) : (\n        <React.Fragment>{children}</React.Fragment>\n    );\n\nconst AccountInfo = ({\n    acc_switcher_disabled_message,\n    balance,\n    currency,\n    disableApp,\n    enableApp,\n    is_dialog_on,\n    is_virtual,\n    toggleDialog,\n    is_disabled,\n}) => (\n    <div className='acc-info__wrapper'>\n        <div className='acc-info__separator' />\n        <AccountInfoWrapper is_disabled={is_disabled} disabled_message={acc_switcher_disabled_message}>\n            <div\n                className={classNames('acc-info', {\n                    'acc-info--show': is_dialog_on,\n                    'acc-info--is-virtual': is_virtual,\n                    'acc-info--is-disabled': is_disabled,\n                })}\n                onClick={is_disabled ? undefined : toggleDialog}\n            >\n                <span className='acc-info__id'>\n                    <DesktopWrapper>\n                        <Icon\n                            icon={`IcCurrency-${is_virtual ? 'virtual' : currency || 'Unknown'}`}\n                            className={`acc-info__id-icon acc-info__id-icon--${is_virtual ? 'virtual' : currency}`}\n                            size={24}\n                        />\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        {(is_virtual || currency) && (\n                            <Icon\n                                icon={`IcCurrency-${is_virtual ? 'virtual' : currency}`}\n                                className={`acc-info__id-icon acc-info__id-icon--${is_virtual ? 'virtual' : currency}`}\n                                size={24}\n                            />\n                        )}\n                    </MobileWrapper>\n                </span>\n                {typeof balance !== 'undefined' && (\n                    <p\n                        className={classNames('acc-info__balance', {\n                            'acc-info__balance--no-currency': !currency && !is_virtual,\n                        })}\n                    >\n                        <span\n                            className={classNames('symbols', {\n                                [`symbols--${(currency || '').toLowerCase()}`]: currency,\n                            })}\n                        />\n                        {!currency && <Localize i18n_default_text='No currency assigned' />}\n                        {currency && balance}\n                    </p>\n                )}\n                {is_disabled ? (\n                    <Icon icon='IcLock' />\n                ) : (\n                    <Icon icon='IcChevronDownBold' className='acc-info__select-arrow' />\n                )}\n            </div>\n        </AccountInfoWrapper>\n        <MobileWrapper>\n            <AccountSwitcherMobile\n                is_visible={is_dialog_on}\n                disableApp={disableApp}\n                enableApp={enableApp}\n                toggle={toggleDialog}\n            />\n        </MobileWrapper>\n        <DesktopWrapper>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={200}\n                classNames={{\n                    enter: 'acc-switcher__wrapper--enter',\n                    enterDone: 'acc-switcher__wrapper--enter-done',\n                    exit: 'acc-switcher__wrapper--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='acc-switcher__wrapper'>\n                    <AccountSwitcher is_visible={is_dialog_on} toggle={toggleDialog} />\n                </div>\n            </CSSTransition>\n        </DesktopWrapper>\n    </div>\n);\n\nAccountInfo.propTypes = {\n    acc_switcher_disabled_message: PropTypes.string,\n    account_type: PropTypes.string,\n    balance: PropTypes.string,\n    currency: PropTypes.string,\n    is_dialog_on: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    loginid: PropTypes.string,\n    toggleDialog: PropTypes.func,\n};\n\nexport default AccountInfo;\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:////home/circleci/project/packages/components/node_modules/react-swipeable/es/index.js","webpack:////home/circleci/project/packages/components/node_modules/memoize-one/dist/memoize-one.esm.js","webpack:////home/circleci/project/packages/components/node_modules/react-window/dist/index.esm.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","defaultProps","preventDefaultTouchmoveEvent","delta","rotationAngle","trackMouse","trackTouch","initialState","xy","swiping","eventData","undefined","start","LEFT","RIGHT","UP","DOWN","rotateXYByAngle","pos","angle","angleInRadians","Math","PI","cos","sin","getHandlers","set","handlerProps","onStart","event","touches","state","props","document","addEventListener","onMove","onUp","_ref","clientX","clientY","initial","concat","first","timeStamp","_ref2","_rotateXYByAngle","x","y","deltaX","deltaY","absX","abs","absY","time","velocity","sqrt","dir","getDirection","onSwiping","cancelablePageSwipe","onSwiped","cancelable","preventDefault","onEnd","cleanUpMouse","removeEventListener","e","attachTouch","el","tls","forEach","_ref3","h","_ref4","output","ref","addState","cleanUpTouch","onMouseDown","updateTransientState","useSwipeable","transientState","useRef","type","transientProps","current","_React$useMemo","useMemo","cb","handlers","Swipeable","_React$PureComponent","subClass","superClass","_this","_set","create","constructor","__proto__","render","_this$props","className","style","_this$props$nodeName","nodeName","innerRef","children","_getHandlers","createElement","PureComponent","propTypes","func","onSwipedUp","onSwipedRight","onSwipedDown","onSwipedLeft","number","bool","string","areInputsEqual","newInputs","lastInputs","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","now","performance","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","requestTimeout","callback","delay","requestAnimationFrame","tick","size","cachedRTLResult","getRTLOffsetType","recalculate","outerDiv","outerStyle","width","height","overflow","direction","innerDiv","innerStyle","appendChild","body","scrollLeft","removeChild","defaultItemKey","columnIndex","data","rowIndex","createGridComponent","_class","_temp","getColumnOffset","getColumnStartIndexForOffset","getColumnStopIndexForStartIndex","getColumnWidth","getEstimatedTotalHeight","getEstimatedTotalWidth","getOffsetForColumnAndAlignment","getOffsetForRowAndAlignment","getRowHeight","getRowOffset","getRowStartIndexForOffset","getRowStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","Grid","_instanceProps","_resetIsScrollingTimeoutId","_outerRef","instance","isScrolling","horizontalScrollDirection","initialScrollLeft","scrollTop","initialScrollTop","scrollUpdateWasRequested","verticalScrollDirection","_callOnItemsRendered","overscanColumnStartIndex","overscanColumnStopIndex","overscanRowStartIndex","overscanRowStopIndex","visibleColumnStartIndex","visibleColumnStopIndex","visibleRowStartIndex","visibleRowStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","_style","columnWidth","rowHeight","itemStyleCache","_getItemStyleCache","position","top","_","__","___","_onScroll","_event$currentTarget","currentTarget","clientHeight","clientWidth","scrollHeight","scrollWidth","setState","prevState","calculatedScrollLeft","max","min","calculatedScrollTop","_resetIsScrollingDebounced","_outerRefSetter","outerRef","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps","_proto","scrollTo","scrollToItem","_ref4$align","align","_this$props2","columnCount","rowCount","_this$state","scrollbarSize","div","offsetWidth","getScrollbarSize","estimatedTotalHeight","horizontalScrollbarSize","verticalScrollbarSize","componentDidMount","_this$props3","_callPropsCallbacks","componentDidUpdate","_this$state2","componentWillUnmount","_this$props4","innerElementType","innerTagName","itemData","_this$props4$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_this$_getHorizontalR","_getHorizontalRangeToRender","columnStartIndex","columnStopIndex","_this$_getVerticalRan","_getVerticalRangeToRender","rowStartIndex","rowStopIndex","items","_rowIndex","_columnIndex","push","estimatedTotalWidth","WebkitOverflowScrolling","willChange","pointerEvents","_this$props5","_this$_getHorizontalR2","_overscanColumnStartIndex","_overscanColumnStopIndex","_visibleColumnStartIndex","_visibleColumnStopIndex","_this$_getVerticalRan2","_overscanRowStartIndex","_overscanRowStopIndex","_visibleRowStartIndex","_visibleRowStopIndex","_this$state3","_horizontalScrollDirection","_scrollLeft","_scrollTop","_scrollUpdateWasRequested","_verticalScrollDirection","_this$props6","overscanColumnCount","overscanColumnsCount","overscanCount","_this$state4","overscanCountResolved","startIndex","stopIndex","overscanBackward","overscanForward","_this$props7","overscanRowCount","overscanRowsCount","_this$state5","_ref5","_ref6","rowMetadataMap","estimatedRowHeight","lastMeasuredRowIndex","totalSizeOfMeasuredRows","itemMetadata","offset","columnMetadataMap","estimatedColumnWidth","lastMeasuredColumnIndex","getItemMetadata","itemType","index","instanceProps","itemMetadataMap","itemSize","lastMeasuredIndex","findNearestItem","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentOffset","itemCount","interval","scrollOffset","estimatedTotalSize","maxOffset","minOffset","round","VariableSizeGrid","resetAfterColumnIndex","shouldForceUpdate","resetAfterIndices","resetAfterRowIndex","_ref6$shouldForceUpda","forceUpdate","_ref7","defaultItemKey$1","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","List","scrollDirection","initialScrollOffset","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","layout","_offset","isHorizontal","_onScrollHorizontal","_onScrollVertical","_event$currentTarget2","validateSharedProps$1","_this$_getRangeToRend","_getRangeToRender","_index","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_scrollDirection","_scrollOffset","getItemMetadata$1","findNearestItemBinarySearch$1","findNearestItemExponentialSearch$1","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","findNearestItem$1","resetAfterIndex","FixedSizeGrid","lastColumnOffset","middleOffset","ceil","_ref8","lastRowOffset","_ref9","_ref10","left","numVisibleColumns","_ref11","_ref12","numVisibleRows","_ref13","FixedSizeList","lastItemOffset","numVisibleItems","shallowDiffers","prev","next","attribute","_attribute","areEqual","prevProps","prevStyle","prevRest","nextStyle","nextRest","shouldComponentUpdate","nextState"],"mappings":"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","file":"js/core.vendors~trader.3e9c5ac5d64b8613535e.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar defaultProps = {\n  preventDefaultTouchmoveEvent: false,\n  delta: 10,\n  rotationAngle: 0,\n  trackMouse: false,\n  trackTouch: true\n};\nvar initialState = {\n  xy: [0, 0],\n  swiping: false,\n  eventData: undefined,\n  start: undefined\n};\nvar LEFT = 'Left';\nvar RIGHT = 'Right';\nvar UP = 'Up';\nvar DOWN = 'Down';\nvar touchStart = 'touchstart';\nvar touchMove = 'touchmove';\nvar touchEnd = 'touchend';\nvar mouseMove = 'mousemove';\nvar mouseUp = 'mouseup';\n\nfunction getDirection(absX, absY, deltaX, deltaY) {\n  if (absX > absY) {\n    if (deltaX > 0) {\n      return LEFT;\n    }\n\n    return RIGHT;\n  } else if (deltaY > 0) {\n    return UP;\n  }\n\n  return DOWN;\n}\n\nfunction rotateXYByAngle(pos, angle) {\n  if (angle === 0) return pos;\n  var angleInRadians = Math.PI / 180 * angle;\n  var x = pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n  var y = pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n  return [x, y];\n}\n\nfunction getHandlers(set, handlerProps) {\n  var onStart = function onStart(event) {\n    // if more than a single touch don't track, for now...\n    if (event.touches && event.touches.length > 1) return;\n    set(function (state, props) {\n      // setup mouse listeners on document to track swipe since swipe can leave container\n      if (props.trackMouse) {\n        document.addEventListener(mouseMove, onMove);\n        document.addEventListener(mouseUp, onUp);\n      }\n\n      var _ref = event.touches ? event.touches[0] : event,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n\n      var xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      return _extends({}, state, initialState, {\n        eventData: {\n          initial: [].concat(xy),\n          first: true\n        },\n        xy: xy,\n        start: event.timeStamp || 0\n      });\n    });\n  };\n\n  var onMove = function onMove(event) {\n    set(function (state, props) {\n      if (!state.xy[0] || !state.xy[1] || event.touches && event.touches.length > 1) {\n        return state;\n      }\n\n      var _ref2 = event.touches ? event.touches[0] : event,\n          clientX = _ref2.clientX,\n          clientY = _ref2.clientY;\n\n      var _rotateXYByAngle = rotateXYByAngle([clientX, clientY], props.rotationAngle),\n          x = _rotateXYByAngle[0],\n          y = _rotateXYByAngle[1];\n\n      var deltaX = state.xy[0] - x;\n      var deltaY = state.xy[1] - y;\n      var absX = Math.abs(deltaX);\n      var absY = Math.abs(deltaY);\n      var time = (event.timeStamp || 0) - state.start;\n      var velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1); // if swipe is under delta and we have not started to track a swipe: skip update\n\n      if (absX < props.delta && absY < props.delta && !state.swiping) return state;\n      var dir = getDirection(absX, absY, deltaX, deltaY);\n\n      var eventData = _extends({}, state.eventData, {\n        event: event,\n        absX: absX,\n        absY: absY,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        velocity: velocity,\n        dir: dir\n      });\n\n      props.onSwiping && props.onSwiping(eventData); // track if a swipe is cancelable(handler for swiping or swiped(dir) exists)\n      // so we can call preventDefault if needed\n\n      var cancelablePageSwipe = false;\n\n      if (props.onSwiping || props.onSwiped || props[\"onSwiped\" + dir]) {\n        cancelablePageSwipe = true;\n      }\n\n      if (cancelablePageSwipe && props.preventDefaultTouchmoveEvent && props.trackTouch && event.cancelable) event.preventDefault(); // first is now always false\n\n      return _extends({}, state, {\n        eventData: _extends({}, eventData, {\n          first: false\n        }),\n        swiping: true\n      });\n    });\n  };\n\n  var onEnd = function onEnd(event) {\n    set(function (state, props) {\n      var eventData;\n\n      if (state.swiping) {\n        eventData = _extends({}, state.eventData, {\n          event: event\n        });\n        props.onSwiped && props.onSwiped(eventData);\n        props[\"onSwiped\" + eventData.dir] && props[\"onSwiped\" + eventData.dir](eventData);\n      }\n\n      return _extends({}, state, initialState, {\n        eventData: eventData\n      });\n    });\n  };\n\n  var cleanUpMouse = function cleanUpMouse() {\n    // safe to just call removeEventListener\n    document.removeEventListener(mouseMove, onMove);\n    document.removeEventListener(mouseUp, onUp);\n  };\n\n  var onUp = function onUp(e) {\n    cleanUpMouse();\n    onEnd(e);\n  };\n\n  var attachTouch = function attachTouch(el) {\n    if (el && el.addEventListener) {\n      // attach touch event listeners and handlers\n      var tls = [[touchStart, onStart], [touchMove, onMove], [touchEnd, onEnd]];\n      tls.forEach(function (_ref3) {\n        var e = _ref3[0],\n            h = _ref3[1];\n        return el.addEventListener(e, h);\n      }); // return properly scoped cleanup method for removing listeners\n\n      return function () {\n        return tls.forEach(function (_ref4) {\n          var e = _ref4[0],\n              h = _ref4[1];\n          return el.removeEventListener(e, h);\n        });\n      };\n    }\n  };\n\n  var onRef = function onRef(el) {\n    // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n    // ignore null here\n    if (el === null) return;\n    set(function (state, props) {\n      // if the same DOM el as previous just return state\n      if (state.el === el) return state;\n      var addState = {}; // if new DOM el clean up old DOM and reset cleanUpTouch\n\n      if (state.el && state.el !== el && state.cleanUpTouch) {\n        state.cleanUpTouch();\n        addState.cleanUpTouch = null;\n      } // only attach if we want to track touch\n\n\n      if (props.trackTouch && el) {\n        addState.cleanUpTouch = attachTouch(el);\n      } // store event attached DOM el for comparison, clean up, and re-attachment\n\n\n      return _extends({}, state, {\n        el: el\n      }, addState);\n    });\n  }; // set ref callback to attach touch event listeners\n\n\n  var output = {\n    ref: onRef // if track mouse attach mouse down listener\n\n  };\n\n  if (handlerProps.trackMouse) {\n    output.onMouseDown = onStart;\n  }\n\n  return [output, attachTouch];\n}\n\nfunction updateTransientState(state, props, attachTouch) {\n  var addState = {}; // clean up touch handlers if no longer tracking touches\n\n  if (!props.trackTouch && state.cleanUpTouch) {\n    state.cleanUpTouch();\n    addState.cleanUpTouch = null;\n  } else if (props.trackTouch && !state.cleanUpTouch) {\n    // attach/re-attach touch handlers\n    if (state.el) {\n      addState.cleanUpTouch = attachTouch(state.el);\n    }\n  }\n\n  return _extends({}, state, addState);\n}\n\nfunction useSwipeable(props) {\n  var trackMouse = props.trackMouse;\n  var transientState = React.useRef(_extends({}, initialState, {\n    type: 'hook'\n  }));\n  var transientProps = React.useRef();\n  transientProps.current = _extends({}, defaultProps, props);\n\n  var _React$useMemo = React.useMemo(function () {\n    return getHandlers(function (cb) {\n      return transientState.current = cb(transientState.current, transientProps.current);\n    }, {\n      trackMouse: trackMouse\n    });\n  }, [trackMouse]),\n      handlers = _React$useMemo[0],\n      attachTouch = _React$useMemo[1];\n\n  transientState.current = updateTransientState(transientState.current, transientProps.current, attachTouch);\n  return handlers;\n}\nvar Swipeable =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(Swipeable, _React$PureComponent);\n\n  function Swipeable(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this;\n\n    _this._set = function (cb) {\n      _this.transientState = cb(_this.transientState, _this.props);\n    };\n\n    _this.transientState = _extends({}, initialState, {\n      type: 'class'\n    });\n    return _this;\n  }\n\n  var _proto = Swipeable.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        style = _this$props.style,\n        _this$props$nodeName = _this$props.nodeName,\n        nodeName = _this$props$nodeName === void 0 ? 'div' : _this$props$nodeName,\n        innerRef = _this$props.innerRef,\n        children = _this$props.children,\n        trackMouse = _this$props.trackMouse;\n\n    var _getHandlers = getHandlers(this._set, {\n      trackMouse: trackMouse\n    }),\n        handlers = _getHandlers[0],\n        attachTouch = _getHandlers[1];\n\n    this.transientState = updateTransientState(this.transientState, this.props, attachTouch);\n    var ref = innerRef ? function (el) {\n      return innerRef(el), handlers.ref(el);\n    } : handlers.ref;\n    return React.createElement(nodeName, _extends({}, handlers, {\n      className: className,\n      style: style,\n      ref: ref\n    }), children);\n  };\n\n  return Swipeable;\n}(React.PureComponent);\nSwipeable.propTypes = {\n  onSwiped: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onSwipedUp: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedDown: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  delta: PropTypes.number,\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  nodeName: PropTypes.string,\n  trackMouse: PropTypes.bool,\n  trackTouch: PropTypes.bool,\n  innerRef: PropTypes.func,\n  rotationAngle: PropTypes.number\n};\nSwipeable.defaultProps = defaultProps;\n\nexport { DOWN, LEFT, RIGHT, Swipeable, UP, useSwipeable };\n","function areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\n\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n      data = _ref.data,\n      rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount =\n    /*#__PURE__*/\n    new WeakSet();\n    devWarningsOverscanRowsColumnsCount =\n    /*#__PURE__*/\n    new WeakSet();\n    devWarningsTagName =\n    /*#__PURE__*/\n    new WeakSet();\n  }\n}\n\nfunction createGridComponent(_ref2) {\n  var _class, _temp;\n\n  var getColumnOffset = _ref2.getColumnOffset,\n      getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n      getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n      getColumnWidth = _ref2.getColumnWidth,\n      getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n      getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n      getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n      getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n      getRowHeight = _ref2.getRowHeight,\n      getRowOffset = _ref2.getRowOffset,\n      getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n      getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n      initInstanceProps = _ref2.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref2.validateProps;\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_assertThisInitialized(_this)));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_assertThisInitialized(_this)),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n            columnWidth = _this$props.columnWidth,\n            direction = _this$props.direction,\n            rowHeight = _this$props.rowHeight;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _style;\n\n          itemStyleCache[key] = style = (_style = {\n            position: 'absolute'\n          }, _style[direction === 'rtl' ? 'right' : 'left'] = getColumnOffset(_this.props, columnIndex, _this._instanceProps), _style.top = getRowOffset(_this.props, rowIndex, _this._instanceProps), _style.height = getRowHeight(_this.props, rowIndex, _this._instanceProps), _style.width = getColumnWidth(_this.props, columnIndex, _this._instanceProps), _style);\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientHeight = _event$currentTarget.clientHeight,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollTop = _event$currentTarget.scrollTop,\n            scrollHeight = _event$currentTarget.scrollHeight,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n\n      return _this;\n    }\n\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = Grid.prototype;\n\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n          align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n          columnIndex = _ref4.columnIndex,\n          rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          height = _this$props2.height,\n          rowCount = _this$props2.rowCount,\n          width = _this$props2.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n          initialScrollLeft = _this$props3.initialScrollLeft,\n          initialScrollTop = _this$props3.initialScrollTop;\n\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollTop = _this$state2.scrollTop,\n          scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n\n            default:\n              var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          columnCount = _this$props4.columnCount,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          rowCount = _this$props4.rowCount,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n          columnStartIndex = _this$_getHorizontalR[0],\n          columnStopIndex = _this$_getHorizontalR[1];\n\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n          rowStartIndex = _this$_getVerticalRan[0],\n          rowStopIndex = _this$_getVerticalRan[1];\n\n      var items = [];\n\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n          columnCount = _this$props5.columnCount,\n          onItemsRendered = _this$props5.onItemsRendered,\n          onScroll = _this$props5.onScroll,\n          rowCount = _this$props5.rowCount;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n              _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n              _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n              _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n              _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n              _overscanRowStartIndex = _this$_getVerticalRan2[0],\n              _overscanRowStopIndex = _this$_getVerticalRan2[1],\n              _visibleRowStartIndex = _this$_getVerticalRan2[2],\n              _visibleRowStopIndex = _this$_getVerticalRan2[3];\n\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n            _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n            _scrollLeft = _this$state3.scrollLeft,\n            _scrollTop = _this$state3.scrollTop,\n            _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n            _verticalScrollDirection = _this$state3.verticalScrollDirection;\n\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    }; // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n          columnCount = _this$props6.columnCount,\n          overscanColumnCount = _this$props6.overscanColumnCount,\n          overscanColumnsCount = _this$props6.overscanColumnsCount,\n          overscanCount = _this$props6.overscanCount,\n          rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n          horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n          isScrolling = _this$state4.isScrolling,\n          scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n          columnCount = _this$props7.columnCount,\n          overscanCount = _this$props7.overscanCount,\n          overscanRowCount = _this$props7.overscanRowCount,\n          overscanRowsCount = _this$props7.overscanRowsCount,\n          rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n          isScrolling = _this$state5.isScrolling,\n          verticalScrollDirection = _this$state5.verticalScrollDirection,\n          scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _temp;\n}\n\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n      direction = _ref5.direction,\n      height = _ref5.height,\n      innerTagName = _ref5.innerTagName,\n      outerTagName = _ref5.outerTagName,\n      overscanColumnsCount = _ref5.overscanColumnsCount,\n      overscanCount = _ref5.overscanCount,\n      overscanRowsCount = _ref5.overscanRowsCount,\n      width = _ref5.width;\n  var instance = _ref6.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n      estimatedRowHeight = _ref2.estimatedRowHeight,\n      lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n      estimatedColumnWidth = _ref4.estimatedColumnWidth,\n      lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n\n  }\n};\n\nvar VariableSizeGrid =\n/*#__PURE__*/\ncreateGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n        width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n        height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n        estimatedColumnWidth = _ref5.estimatedColumnWidth,\n        estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n          rowIndex = _ref6.rowIndex,\n          _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n          shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n        rowHeight = _ref7.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\n\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection =\n    /*#__PURE__*/\n    new WeakSet();\n    devWarningsTagName$1 =\n    /*#__PURE__*/\n    new WeakSet();\n  }\n}\n\nfunction createListComponent(_ref) {\n  var _class, _temp;\n\n  var getItemOffset = _ref.getItemOffset,\n      getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n      getItemSize = _ref.getItemSize,\n      getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n      getStartIndexForOffset = _ref.getStartIndexForOffset,\n      getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n      initInstanceProps = _ref.initInstanceProps,\n      shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n      validateProps = _ref.validateProps;\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_assertThisInitialized(_this)));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_assertThisInitialized(_this)),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n            direction = _this$props.direction,\n            itemSize = _this$props.itemSize,\n            layout = _this$props.layout;\n\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n\n        var style;\n\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _style;\n\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          itemStyleCache[index] = style = (_style = {\n            position: 'absolute'\n          }, _style[direction === 'rtl' ? 'right' : 'left'] = isHorizontal ? _offset : 0, _style.top = !isHorizontal ? _offset : 0, _style.height = !isHorizontal ? size : '100%', _style.width = isHorizontal ? size : '100%', _style);\n        }\n\n        return style;\n      };\n\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n            clientWidth = _event$currentTarget.clientWidth,\n            scrollLeft = _event$currentTarget.scrollLeft,\n            scrollWidth = _event$currentTarget.scrollWidth;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n            clientHeight = _event$currentTarget2.clientHeight,\n            scrollHeight = _event$currentTarget2.scrollHeight,\n            scrollTop = _event$currentTarget2.scrollTop;\n\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n\n      return _this;\n    }\n\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n\n    var _proto = List.prototype;\n\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n\n      var itemCount = this.props.itemCount;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1));\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps));\n    };\n\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props2 = this.props,\n          direction = _this$props2.direction,\n          initialScrollOffset = _this$props2.initialScrollOffset,\n          layout = _this$props2.layout;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props3 = this.props,\n          direction = _this$props3.direction,\n          layout = _this$props3.layout;\n      var _this$state = this.state,\n          scrollOffset = _this$state.scrollOffset,\n          scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n\n              default:\n                var clientWidth = outerRef.clientWidth,\n                    scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    };\n\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          className = _this$props4.className,\n          direction = _this$props4.direction,\n          height = _this$props4.height,\n          innerRef = _this$props4.innerRef,\n          innerElementType = _this$props4.innerElementType,\n          innerTagName = _this$props4.innerTagName,\n          itemCount = _this$props4.itemCount,\n          itemData = _this$props4.itemData,\n          _this$props4$itemKey = _this$props4.itemKey,\n          itemKey = _this$props4$itemKey === void 0 ? defaultItemKey$1 : _this$props4$itemKey,\n          layout = _this$props4.layout,\n          outerElementType = _this$props4.outerElementType,\n          outerTagName = _this$props4.outerTagName,\n          style = _this$props4.style,\n          useIsScrolling = _this$props4.useIsScrolling,\n          width = _this$props4.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n\n      var _this$_getRangeToRend = this._getRangeToRender(),\n          startIndex = _this$_getRangeToRend[0],\n          stopIndex = _this$_getRangeToRend[1];\n\n      var items = [];\n\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n              _overscanStartIndex = _this$_getRangeToRend2[0],\n              _overscanStopIndex = _this$_getRangeToRend2[1],\n              _visibleStartIndex = _this$_getRangeToRend2[2],\n              _visibleStopIndex = _this$_getRangeToRend2[3];\n\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n            _scrollDirection = _this$state2.scrollDirection,\n            _scrollOffset = _this$state2.scrollOffset,\n            _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    }; // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props5 = this.props,\n          itemCount = _this$props5.itemCount,\n          overscanCount = _this$props5.overscanCount;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollDirection = _this$state3.scrollDirection,\n          scrollOffset = _this$state3.scrollOffset;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _temp;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n      direction = _ref2.direction,\n      height = _ref2.height,\n      layout = _ref2.layout,\n      innerTagName = _ref2.innerTagName,\n      outerTagName = _ref2.outerTagName,\n      width = _ref2.width;\n  var instance = _ref3.instance;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n\n        break;\n\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\n\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\n\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n      itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n      lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\n\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\n\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n      estimatedItemSize = _ref3.estimatedItemSize,\n      lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nvar VariableSizeList =\n/*#__PURE__*/\ncreateListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n        height = props.height,\n        itemCount = props.itemCount,\n        layout = props.layout,\n        width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n        estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeGrid =\n/*#__PURE__*/\ncreateGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n        rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n        columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n        columnWidth = _ref7.columnWidth,\n        width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n        height = _ref8.height,\n        rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n        columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n        columnCount = _ref10.columnCount,\n        width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n        rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n        rowCount = _ref12.rowCount,\n        height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n        rowHeight = _ref13.rowHeight;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\nvar FixedSizeList =\n/*#__PURE__*/\ncreateListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n        itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset) {\n    var direction = _ref4.direction,\n        height = _ref4.height,\n        itemCount = _ref4.itemCount,\n        itemSize = _ref4.itemSize,\n        layout = _ref4.layout,\n        width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize);\n\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n\n      case 'end':\n        return minOffset;\n\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n        itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n        height = _ref6.height,\n        itemCount = _ref6.itemCount,\n        itemSize = _ref6.itemSize,\n        layout = _ref6.layout,\n        width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n      prevRest = _objectWithoutPropertiesLoose(prevProps, [\"style\"]);\n\n  var nextStyle = nextProps.style,\n      nextRest = _objectWithoutPropertiesLoose(nextProps, [\"style\"]);\n\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\n\nexport { VariableSizeGrid, VariableSizeList, FixedSizeGrid, FixedSizeList, areEqual, shouldComponentUpdate };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}